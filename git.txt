1.git创建分支

git branch develop    #直接从当前分支创建develop分支
git checkout -b develop     #从当前分支创建develop分支，并切换到develop分支
git checkout -b develop master #从master分支创建develop分支，并切换到develop分支
2.git切换分支

git checkout develop     #切换到develop分支
git checkout master      #切换到master分支
3.git分支合并

git merge develop          #合并develop分支到当前分支，使当前分支有develo分支的改动
git merge develop --squash     #合并develop分支到当前分支，但将分支上的提交压缩，然后结束后需要手工提交变成一次提交
git merge origin/master     #合并远程的master分支到当前分支
4.git分支管理

git branch     #查看所有分支，*表示当前分支
git branch -d develop      #删除develop分支
git branch -D develop     #强制删除develop分支
git branch --merged        #查看与当前分支合并过的分支，只要合并过的分支即使删除也不用担心
git branch --no-merged   #查看没有与当前分支合并过的分支


5.git克隆

git克隆:git clone git@git.meituan.com:fetch


6.git恢复命令reset

git reset命令有3种方式：
git reset -mixed     #默认方式，不带任何参数的git reset，只保留源码，回退commit和index信息
git reset -soft        #回退到某个版本，只回退了commit的信息，不会恢复到index file一级，如果还要提交，直接commit即可。
git reset -hard      #彻底回退到某个版本，本地的源码也会变为上一个版本的内容。
7.git文件操作

git checkout filename     #检出最后一次提交的作业覆盖当前文件（工作目录中），或者说放弃当前文件的修改
git mv a.c b.c     #为a.c文件重名为为b.c     #等同于mv a.c b.c     #git rm a.c     #git add b.c
git mv a.c temp     #其中temp为文件名，将a.c文件移动到temp文件夹中      #等同于mv a.c temp     #git rm a.c     #git add temp/a.c
git mv等同于git


8.暂存区操作

git reset HEAD filename     #将暂存区文件删除,将暂存区的版本恢复到和head库中一样的状态
$修改文件hello.c
    $git add hello.c
(在提交之前，恢复已经追踪的修改)
    $git reset HEAD filename
    $git checkout filename


9.git hist
等同与hist = log --pretty=format:\"%h %ad |[%an] %s%d\" --graph --date=short
